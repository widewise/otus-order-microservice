{
	"info": {
		"_postman_id": "608240e7-0f32-4a8f-8e08-4d04445084aa",
		"name": "Order requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "712846"
	},
	"item": [
		{
			"name": "Create account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check account creation\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  pm.collectionVariables.set(\"account_request_id\", pm.request.headers.get(\"x-request-id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-request-id",
						"value": "{{$guid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"{{$randomUserName}}\",\r\n  \"notificationAddress\": \"{{$randomEmail}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{basePaymentUrl}}/api/account",
					"protocol": "http",
					"host": [
						"{{basePaymentUrl}}"
					],
					"path": [
						"api",
						"account"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Read account id for request id\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.collectionVariables.set(\"accountId\", responseJson.id);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{basePaymentUrl}}/api/account/{{account_request_id}}",
					"protocol": "http",
					"host": [
						"{{basePaymentUrl}}"
					],
					"path": [
						"api",
						"account",
						"{{account_request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deposit account",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check account discount added\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "x-request-id",
						"value": "{{$guid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"value\": 5000\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{basePaymentUrl}}/api/account/{{accountId}}/deposit",
					"protocol": "http",
					"host": [
						"{{basePaymentUrl}}"
					],
					"path": [
						"api",
						"account",
						"{{accountId}}",
						"deposit"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check account deposit",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check account balance\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.balance).to.eql(5000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{basePaymentUrl}}/api/account/{{account_request_id}}",
					"protocol": "http",
					"host": [
						"{{basePaymentUrl}}"
					],
					"path": [
						"api",
						"account",
						"{{account_request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check first order creation\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  pm.collectionVariables.set(\"request_id\", pm.request.headers.get(\"x-request-id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-request-id",
						"value": "{{$guid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"createDate\": \"{{$isoTimestamp}}\",\r\n  \"productId\": {{$randomInt}},\r\n  \"count\": {{$randomInt}},\r\n  \"accountId\": {{accountId}},\r\n  \"cost\": 1000,\r\n  \"address\": \"{{$randomStreetAddress}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseOrderUrl}}/api/order",
					"protocol": "http",
					"host": [
						"{{baseOrderUrl}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check first order creation\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){}, 100);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseOrderUrl}}/api/order/{{request_id}}",
					"protocol": "http",
					"host": [
						"{{baseOrderUrl}}"
					],
					"path": [
						"api",
						"order",
						"{{request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check account withdrawal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check account balance\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.balance).to.eql(4000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{basePaymentUrl}}/api/account/{{account_request_id}}",
					"protocol": "http",
					"host": [
						"{{basePaymentUrl}}"
					],
					"path": [
						"api",
						"account",
						"{{account_request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check success notification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check notification is succeed\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.type).to.eql(0);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseNotificationUrl}}/api/notification/{{request_id}}",
					"protocol": "http",
					"host": [
						"{{baseNotificationUrl}}"
					],
					"path": [
						"api",
						"notification",
						"{{request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create invalid order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check order created\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  pm.collectionVariables.set(\"request_id\", pm.request.headers.get(\"x-request-id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-request-id",
						"value": "{{$guid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"createDate\": \"{{$isoTimestamp}}\",\r\n  \"productId\": {{$randomInt}},\r\n  \"count\": {{$randomInt}},\r\n  \"accountId\": {{accountId}},\r\n  \"cost\": 10000,\r\n  \"address\": \"{{$randomStreetAddress}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseOrderUrl}}/api/order",
					"protocol": "http",
					"host": [
						"{{baseOrderUrl}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check invalid order creation\", () => {\r",
							"  pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){}, 100);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseOrderUrl}}/api/order/{{request_id}}",
					"protocol": "http",
					"host": [
						"{{baseOrderUrl}}"
					],
					"path": [
						"api",
						"order",
						"{{request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check failed notification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check notification is failed\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.type).to.eql(1);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseNotificationUrl}}/api/notification/{{request_id}}",
					"protocol": "http",
					"host": [
						"{{baseNotificationUrl}}"
					],
					"path": [
						"api",
						"notification",
						"{{request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check account balance",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check account balance\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  const responseJson = pm.response.json();\r",
							"  pm.expect(responseJson.balance).to.eql(4000);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{basePaymentUrl}}/api/account/{{account_request_id}}",
					"protocol": "http",
					"host": [
						"{{basePaymentUrl}}"
					],
					"path": [
						"api",
						"account",
						"{{account_request_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseOrderUrl",
			"value": "localhost:5044",
			"type": "string"
		},
		{
			"key": "basePaymentUrl",
			"value": "localhost:5061",
			"type": "string"
		},
		{
			"key": "baseNotificationUrl",
			"value": "localhost:5124",
			"type": "string"
		},
		{
			"key": "account_request_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "request_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "accountId",
			"value": "",
			"type": "string"
		}
	]
}