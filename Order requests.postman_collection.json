{
	"info": {
		"_postman_id": "608240e7-0f32-4a8f-8e08-4d04445084aa",
		"name": "Order requests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "712846"
	},
	"item": [
		{
			"name": "Create order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check first order creation\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  pm.collectionVariables.set(\"request_id\", pm.request.headers.get(\"x-request-id\"));\r",
							"  pm.collectionVariables.set(\"request\", pm.request.body.raw);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-request-id",
						"value": "{{$guid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"createDate\": \"{{$isoTimestamp}}\",\r\n  \"productId\": {{$randomInt}},\r\n  \"count\": {{$randomInt}},\r\n  \"cost\": {{$randomInt}},\r\n  \"address\": \"{{$randomStreetAddress}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Retry create order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check retry order creation\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-request-id",
						"value": "{{request_id}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{{request}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check first order creation\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/order/{{request_id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"order",
						"{{request_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create invalid order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check order created\", () => {\r",
							"  pm.response.to.have.status(200);\r",
							"  pm.collectionVariables.set(\"request_id\", pm.request.headers.get(\"x-request-id\"));\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-request-id",
						"value": "{{$guid}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"createDate\": \"{{$isoTimestamp}}\",\r\n  \"productId\": {{$randomInt}},\r\n  \"count\": {{$randomInt}},\r\n  \"cost\": {{$randomInt}},\r\n  \"address\": \"\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/api/order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get invalid order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check first order creation\", () => {\r",
							"  pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"setTimeout(function(){}, 1000);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/api/order/{{request_id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"order",
						"{{request_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework",
			"type": "string"
		},
		{
			"key": "request_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "request",
			"value": "",
			"type": "string"
		}
	]
}