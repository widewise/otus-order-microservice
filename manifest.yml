apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: orderapp
  name: orderapp
  namespace: saga
spec:
  replicas: 3
  selector:
    matchLabels:
      app: orderapp
  template:
    metadata:
      labels:
        app: orderapp
    spec:
      containers:
      - name: orderapp
        image: docker.io/widedreadnout/otus-microservice-order
        ports:
          - containerPort: 8000
        volumeMounts:
          - name: secrets
            mountPath: /app/secrets
            readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: secret-order-appsettings

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: paymentapp
  name: paymentapp
  namespace: saga
spec:
  replicas: 3
  selector:
    matchLabels:
      app: paymentapp
  template:
    metadata:
      labels:
        app: paymentapp
    spec:
      containers:
      - name: paymentapp
        image: docker.io/widedreadnout/otus-microservice-payment
        ports:
          - containerPort: 8000
        volumeMounts:
          - name: secrets
            mountPath: /app/secrets
            readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: secret-payment-appsettings

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: storeapp
  name: storeapp
  namespace: saga
spec:
  replicas: 3
  selector:
    matchLabels:
      app: storeapp
  template:
    metadata:
      labels:
        app: storeapp
    spec:
      containers:
      - name: storeapp
        image: docker.io/widedreadnout/otus-microservice-store
        ports:
          - containerPort: 8000
        volumeMounts:
          - name: secrets
            mountPath: /app/secrets
            readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: secret-store-appsettings

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: deliveryapp
  name: deliveryapp
  namespace: saga
spec:
  replicas: 3
  selector:
    matchLabels:
      app: deliveryapp
  template:
    metadata:
      labels:
        app: deliveryapp
    spec:
      containers:
      - name: deliveryapp
        image: docker.io/widedreadnout/otus-microservice-delivery
        ports:
          - containerPort: 8000
        volumeMounts:
          - name: secrets
            mountPath: /app/secrets
            readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: secret-delivery-appsettings

---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: notificationapp
  name: notificationapp
  namespace: saga
spec:
  replicas: 3
  selector:
    matchLabels:
      app: notificationapp
  template:
    metadata:
      labels:
        app: notificationapp
    spec:
      containers:
      - name: notificationapp
        image: docker.io/widedreadnout/otus-microservice-notification
        ports:
          - containerPort: 8000
        volumeMounts:
          - name: secrets
            mountPath: /app/secrets
            readOnly: true
      volumes:
      - name: secrets
        secret:
          secretName: secret-notification-appsettings

---

apiVersion: v1
kind: Service
metadata:
  name: orderapp-service
  namespace: saga
  labels:
    app: orderapp
    app.kubernetes.io/instance: orderapp
    app.kubernetes.io/name: orderapp
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
  selector:
    app: orderapp
  type: NodePort

---

apiVersion: v1
kind: Service
metadata:
  name: paymentapp-service
  namespace: saga
  labels:
    app: paymentapp
    app.kubernetes.io/instance: paymentapp
    app.kubernetes.io/name: paymentapp
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
  selector:
    app: paymentapp
  type: NodePort

---

apiVersion: v1
kind: Service
metadata:
  name: storeapp-service
  namespace: saga
  labels:
    app: storeapp
    app.kubernetes.io/instance: storeapp
    app.kubernetes.io/name: storeapp
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
  selector:
    app: storeapp
  type: NodePort

---

apiVersion: v1
kind: Service
metadata:
  name: deliveryapp-service
  namespace: saga
  labels:
    app: deliveryapp
    app.kubernetes.io/instance: deliveryapp
    app.kubernetes.io/name: deliveryapp
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
  selector:
    app: deliveryapp
  type: NodePort

---

apiVersion: v1
kind: Service
metadata:
  name: notificationapp-service
  namespace: saga
  labels:
    app: notificationapp
    app.kubernetes.io/instance: notificationapp
    app.kubernetes.io/name: notificationapp
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
  selector:
    app: notificationapp
  type: NodePort

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: orderapp-ingress
  namespace: saga
spec:
  ingressClassName: nginx
  rules:
  - host: "arch.homework"
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: orderapp-service
              port:
                number: 80